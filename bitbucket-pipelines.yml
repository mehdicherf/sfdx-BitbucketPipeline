image: mehdisfdc/sfdx-cli-beta #image with sfdx and sgd installed


#===DEFINITIONS===
definitions:
 
scripts:
 decryptCertificate: &decryptCertificate openssl aes-256-cbc -d -md md5 -in $SERVER_KEY_PATH -out build/server.key -pass pass:$SERVER_KEY_PASSWORD
 authToOrg: &authToOrg sfdx force:auth:jwt:grant -s -i $CONSUMERKEY -f build/server.key -u $USERNAME -r $INSTANCE_URL
 assignEnvVar: &assignEnvVar export SFDX_USE_GENERIC_UNIX_KEYCHAIN=true && export SFDX_DOMAIN_RETRY=300 && export SFDX_DISABLE_APP_HUB=true && export SFDX_LOG_LEVEL=DEBUG
 removeScratchOnlyFolders: &removeScratchOnlyFolders rm -rf force-app/main/default/namedCredentials/
 gitDeltaSources: &gitDeltaSources if [ $DELTA_DEPLOY = 'TRUE' ]; then mkdir output && sgd -t HEAD -f $LAST_DEPLOYED_COMMIT -r . -o output && rm -rf force-app && mv output/force-app/ .; fi
 deploy: &deploy sfdx force:source:deploy -p force-app -w 30
 deployAndTest: &deployAndTest sfdx force:source:deploy -p force-app -l RunLocalTests -w 30
 deployCheckOnly: &deployCheckOnly sfdx force:source:deploy -c -p force-app -l RunLocalTests -w 30
 deployDestructiveDelta: &deployDestructiveDelta if [ $DELTA_DEPLOY = 'TRUE' ]; then cat output/destructiveChanges.xml && sfdx force:mdapi:deploy -d output -w 15 --ignorewarnings; fi

 
 steps:
  
    - step: &pmd-check
        name: Code Quality - PMD
        script:
          #===Download PMD===
          - wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F$PMD_VERSION/pmd-bin-$PMD_VERSION.zip
          - unzip pmd-bin-$PMD_VERSION.zip
          #===Make sure there is no PMD error with a high priority===
          - pmd-bin-$PMD_VERSION/bin/run.sh pmd -minimumpriority $PMD_MINIMUM_PRIORITY -d force-app -R custom-apex-rules.xml -f text -l apex

    - step: &scratch-check
        name: Scratch org Push & Test
        script:
          #===assign variables===
          - *assignEnvVar
          - export USERNAME=$PROD_USERNAME
          - export CONSUMERKEY=$PROD_CONSUMERKEY
          - export INSTANCE_URL=https://login.salesforce.com
          - export SERVER_KEY_PATH=build/PROD_server.key.enc
          - export SERVER_KEY_PASSWORD=$PROD_KEY_PASSWORD
          #===login to Dev Hub===
          - *decryptCertificate
          - *authToOrg
          #===setup scratch org===
          - sfdx force:org:create -v $USERNAME --setdefaultusername --definitionfile config/project-scratch-def.json --setalias ciorg --wait 10 --durationdays 1
          - sfdx force:org:display -u ciorg
          - sfdx force:source:push -u ciorg --json
          #===get test results===
          - sleep 60
          - sfdx force:apex:test:run -u ciorg --wait 10
          #===delete scratch org===
          - sfdx force:org:delete -u ciorg -p

    - step: &ci-validate
        name: CI sandbox Check-only 
        script:
          #===assign variables===
          - *assignEnvVar
          - export USERNAME=$CI_USERNAME
          - export CONSUMERKEY=$CI_CONSUMERKEY
          - export INSTANCE_URL=https://test.salesforce.com
          - export SERVER_KEY_PATH=build/CI_server.key.enc
          - export SERVER_KEY_PASSWORD=$CI_KEY_PASSWORD
          - export SFDX_AUDIENCE_URL=https://test.salesforce.com
          #===remove env specific metadata===
          - *removeScratchOnlyFolders
          #===auth with target===
          - *decryptCertificate
          - *authToOrg
          #===prepare delta sources===
          - git fetch origin "+refs/heads/*:refs/remotes/origin/*"
          - export LAST_DEPLOYED_COMMIT=origin/master
          - *gitDeltaSources
          #===deploy===
          - *deployCheckOnly

    - step: &ci-deploy
        name: Deploy to CI org
        script:
          #===assign variables===
          - *assignEnvVar
          - export USERNAME=$CI_USERNAME
          - export CONSUMERKEY=$CI_CONSUMERKEY
          - export INSTANCE_URL=https://test.salesforce.com
          - export SERVER_KEY_PATH=build/CI_server.key.enc
          - export SERVER_KEY_PASSWORD=$CI_KEY_PASSWORD
          #===remove env specific metadata===
          - *removeScratchOnlyFolders
          #===auth with target===
          - *decryptCertificate
          - *authToOrg
          #===prepare delta sources===
          - export LAST_DEPLOYED_COMMIT=HEAD^
          - *gitDeltaSources
          #===deploy===
          - *deploy
          - *deployDestructiveDelta

    - step: &integ-deploy
        name: Deploy to INTEG org
        script:
          #===assign variables===
          - *assignEnvVar
          - export USERNAME=$INTEG_USERNAME
          - export CONSUMERKEY=$INTEG_CONSUMERKEY
          - export INSTANCE_URL=https://test.salesforce.com
          - export SERVER_KEY_PATH=build/INTEG_server.key.enc
          - export SERVER_KEY_PASSWORD=$INTEG_KEY_PASSWORD
          #===remove env specific metadata===
          - *removeScratchOnlyFolders
          #===auth with target===
          - *decryptCertificate
          - *authToOrg
          #===prepare delta sources===
          - export LAST_DEPLOYED_COMMIT=HEAD^
          - *gitDeltaSources
          #===deploy===
          - *deploy
          - *deployDestructiveDelta

    - step: &uat-deploy
        name: Deploy to UAT org
        script:
          #===assign variables===
          - *assignEnvVar
          - export USERNAME=$UAT_USERNAME
          - export CONSUMERKEY=$UAT_CONSUMERKEY
          - export INSTANCE_URL=https://test.salesforce.com
          - export SERVER_KEY_PATH=build/UAT_server.key.enc
          - export SERVER_KEY_PASSWORD=$UAT_KEY_PASSWORD
          #===remove env specific metadata===
          - *removeScratchOnlyFolders
          #===auth with target===
          - *decryptCertificate
          - *authToOrg
          #===prepare delta sources===
          - export LAST_DEPLOYED_COMMIT=HEAD^
          - *gitDeltaSources
          #===deploy===
          - *deployAndTest
          - *deployDestructiveDelta

    - step: &preprod-deploy
        name: Deploy to PREPROD org
        script:
          #===assign variables===
          - *assignEnvVar
          - export USERNAME=$PREPROD_USERNAME
          - export CONSUMERKEY=$PREPROD_CONSUMERKEY
          - export INSTANCE_URL=https://test.salesforce.com
          - export SERVER_KEY_PATH=build/PREPROD_server.key.enc
          - export SERVER_KEY_PASSWORD=$PREPROD_KEY_PASSWORD
          #===remove env specific metadata===
          - *removeScratchOnlyFolders
          #===auth with target===
          - *decryptCertificate
          - *authToOrg
          #===prepare delta sources===
          - export LAST_DEPLOYED_COMMIT=HEAD^
          - *gitDeltaSources
          #===deploy===
          - *deployAndTest
          - *deployDestructiveDelta

    - step: &prod-deploy
        name: Deploy to PROD org
        script:
          #===assign variables===
          - *assignEnvVar
          - export USERNAME=$PROD_USERNAME
          - export CONSUMERKEY=$PROD_CONSUMERKEY
          - export INSTANCE_URL=https://login.salesforce.com
          - export SERVER_KEY_PATH=build/PROD_server.key.enc
          - export SERVER_KEY_PASSWORD=$PROD_KEY_PASSWORD
          #===remove env specific metadata===
          - *removeScratchOnlyFolders
          #===auth with target===
          - *decryptCertificate
          - *authToOrg
          #===prepare delta sources===
          - export LAST_DEPLOYED_COMMIT=HEAD^
          - *gitDeltaSources
          #===deploy===
          - *deployAndTest
          - *deployDestructiveDelta




#===PIPELINES===
pipelines:

  default: #this will run for all branches unless specificed otherwise
    - parallel:
      - step: *pmd-check
      - step: *scratch-check
      - step: *ci-validate

  branches:
    develop:
      - step: *integ-deploy
    release/*:
      - parallel:
        - step: *uat-deploy
        - step: *preprod-deploy
    master:
      - step: *prod-deploy
      - step: *ci-deploy